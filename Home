from multiprocessing import Process
import random
import time

def Home (n,nDaysChange,sunIndex,windIndex,temperature) :
        nDays = 0
        energie = 0
        while nDays < 3 : #remplacer par un semaphore
            time.sleep(1)
            if nDays == 0 :
                m = 300 + random.randint(-3, 3)   #Number of homes with production of energy
                print (m)                                #move with time that
            for i in range (n) :
                energie = energyProd(sunIndex,windIndex,i,m,energie)
                energie = energyCons(temperature,energie)
            if nDays > nDaysChange :
                nDays = 0
            print (energie)




def energyProd(sunIndex,windIndex,i,m,energie):
    if i < m :
        if i < m/3 :                          #1/3 of the energy is produced by wind turbines
            prod = random.randint(0, 50*windIndex)      #Nominal power = 3/6 kWc
                                                # -> 259 200/518 400 kWh
        else :                 #2/3 of the energy is produced by solar panels
            prod = random.randint(0, 60*sunIndex)
        return (energie + prod)

def energyCons(temperature,energie):   #10 000/17 000 kWh/years -> ~27/47 kWh/days
    return (energie - random.randint(0, 32-temperature))

energyTrade():







if __name__ == "__main__":
    n = 6 #Number of homes
    nDaysChange = 3            #Average number of days it takes for
                                #the number of houses equipped with
                                #an energy production system to change
    sunIndex = 0.4
    windIndex = 0.3
    temperature = 23

    p = Process(target=Home, args=(n,nDaysChange,sunIndex,windIndex,temperature))
    p.start()
    p.join()
